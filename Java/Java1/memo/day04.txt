day04. 삼항연산자, 제어문 - 조건문, 제어문 - 반복문

복습
	연산자의 우선순위
	최우선 연산자
	단항 연산자
	산술 연산자
	쉬프트 연산자
	관계 연산자
	논리 연산자
	삼항 연산자
	대입 연산자


삼항 연산자
	조건식 ? 참일 경우의 값 : 거짓일 경우의 값
	
	조건식의 참, 거짓 여부에 따라 2개의 값중에
	하나의 값으로 사용하게 된다

제어문
	코드의 실행을 제어한다
	1. 조건문(if문, switch문)
	2. 반복문(for문, while문, do-while문)
	3. 기타제어문(break문, continue문)

조건문
	조건식에 따라서 프로그램의 흐름을 제어한다
	if문, if-else문, if-else if문, switch문

if문
	if(조건식) {
		조건식이 참이면 실행할 코드
	}

	소괄호 안의 조건식이 참이면 중괄호 안의
	코드가 실행된다. 조건식이 거짓이라면 실행되지
	않는다

if-else문
	if(조건식) {
		조건식이 참이면 실행할 코드
	}else{
		조건식이 거짓이면 실행할 코드
	}

	* else는 단독으로 사용할수 없다(if문과 연결된다)

if-else if문
	if(조건식1) {
		조건식1이 참이면 실행할 코드
	}else if(조건식2) {
		조건식1이 거짓이고, 
		조건식2가 참이면 실행할 코드
	}else{
		조건식1, 조건식2가 거짓이면
		실행할코드
	}

	* else if는 단독으로 사용하지 못한다

switch문
	
	switch(변수 또는 값) {
		
	case 값1:
		변수가 값1과 일치할때 실행할 코드
		break;

	case 값2:
		변수가 값2와 일치할때 실행할 코드
		break;

	case 값3:
		변수가 값3와 일치할때 실행할 코드
		break;
	...
	default:
		변수가 위에있는 모든 값들와 일치하지
		않을때 실행할 코드
		break;
	}

삼항연산자와 if문과 switch문
	삼항 연산자: 조건식이 1개일때 주로 사용
	if문 : 조건식에 관계연산자를 사용하거나 여러개의 조건식을
	논리연산자로 연결할때 사용
	switch문 : 하나의 변수에 여러개의 값이 담길수 있고,
	각 값을 가지고 비교할때 사용

	if문 > switch문 > 삼항연산자
	
반복문
	특정 코드를 반복하여 실행한다
	for문, while문, do-while문

for문

	반복 횟수가 정해져 있을때 사용한다
	
	for(초기식; 조건식; 증감식){
		반복 실행할 코드
	}

	초기식 : 반복문에 사용할 변수(제어변수)를 선언하고 초기화한다
	조건식 : 반복 수행할 범위(조건식이 참인동안 반복 실행한다)
	실행할 코드 : 반복 실행할 코드를 작성한다
	증감식 : 초기값(제어변수)을 증가하거나 감소시킨다

	초기식 -> 조건식 -> 실행할 코드 -> 증감식 -> 조건식 -> 실행할코드..
	
	ex) for (int i = 0; i < 10; i++) {
		System.out.println("홍길동");
	}




















