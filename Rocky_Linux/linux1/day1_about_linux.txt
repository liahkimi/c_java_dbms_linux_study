컴퓨터 = 소프트웨어 + 하드웨어
Linux = 운영체제 = 컴퓨터 사용자와 하드웨어 간의 인터페이스로서 동작
user <- soft ware(application=program) <- OS(program) <- hard ware(user가 접근 불가)
마이크로소프트-> 윈도우10(유저용), 윈도우 서버 2022(서버용)
Unix -> Linux, Unix

운영 체제의 목적
1. 처리 능력 향상
2. 사용 가능도 향상
3. 신뢰도 향상
4. 반환 시간 단축
5. 운영체제의 성능을 평가하는 기준

운영체제의 5대 기능
1. 프로세서(cpu) 관리
2. 메모리 관리
3. 프로세스 관리(소프트웨어)
4. 입출력 관리 -주변장치 관리 
5. 파일시스템 관리 -데이터 검색, 삭제, 저장 (메인)

메인보드와 주변장치
: cpu(대빵,메인(마더)보드) <= 입출력 시키는 것 = 주변장치(입출력 관리등...)

 CPU와 가장 가까운건 메모리 (가까울수록 빠름)

프로세스 
: HDD -로드-> 메모리 (FILE.exe파일 실행 시  메모리에 실행)


리눅스란?
리누스 토발츠가 개발한 리눅스 커널에 기반을 둔 오픈소스 유닉스 계역 운영체제
커널을 개발. C언어로 이루어짐.
리눅스 커널을 C언어로 분석할 수 있음
커널이 뭐지

리눅스(커널)의 배포판
redhat- rocky linux -fedora
debian - ubuntu - kali
suse- linuxmint - android

현대자동차,삼성자동차,기아자동차의 엔진이 같듯
위의 배포판들도 공통적으로 리눅스 커널 사용

GNU 프로젝트
GNU is Not Unix
리차드 스톨만 :
-  FSF(FREE SOFTWARE FEDERAL)재단 설립
- 1세대 해커
- C언어 전에 어셈블리어로 개발함


리눅스 
- 장점 : 
1. 무료 제공
2. 공개 운영체제
3. 강력한 보안 기능
4. 다양한 하드웨어 지원
5. 무료료 고가의 유닉스 서버와 동일한 성능 제공
6. 유닉스와 완벽하게 호환 가능
7. C언어, JAVA와 같은 대부분 개발언어 지원
8. 특정기계에 의존하지 않아 어떤 시스템에도 변경 가능

- 단점 : 
1. 공개 운영체제로 문제발생시 보상X
2. 한글 입출력 어려움
3. 기술 지원 부족
4. 특정 하드웨어에 대한 자원 부족
5. 사용자의 숙련된 기술 요구(교육받는 이유)

리눅스의 구조
hardware 
-> kernel(core, OS, 핵심, 하드웨어를 통제) 
-> shell(명령어 해석기,프로그래밍 언어, application의 명령을 해석해서  kernel에 전달)
-> application (client)
-> 사용자

리눅스의 3요소
- 1요소 : kernel 커널
- 2요소 : shell 셸
- 3요소 : FileSystem

Shell
- 사용자와 커널 간 인터페이스 역할
- 명령어 해석기
- 프로그래밍 언어
- 윈도우의 명령프롬프트
- 엔터키 = ls

유저 => shell => kernel => hardware

kernel
- 운영체제의 핵심
- 셸과 하드웨어 간 인터페이스 역할
- 주로 디바이스 관리, 프로세스 관리, 메모리 관리, 시스템 콜 제공
- version : 6(주버전:커널).7(부버전/홀수:개발버전).4(패치레벨)

root /

/bin/기본 명령어 -중요
/boot/ 부팅할때 사용(커널)-조금 중요
/dev/ 주변장치 파일
/etc/ 환경설정 파일-매우중요
/home/ 일반사용자생성, 일반생성자의 홈 디렉토리 - 중료
/lib/ 32bit library  
/mnt/  mounting할 때 사용 
/opt/ 대용량
/root/ root의 홈 디렉토리
/sbin/ system 관리 명령어 (system binary) -중요
/tmp/ 특수비트(보안)
/user/일반 사용자가 사용하는 명령어
/user/bin/일반 사용자의 명령어
/user/sbin/
/var/변동되는것들 -중요
/var/log/
/var/spool
/var/tmp/

