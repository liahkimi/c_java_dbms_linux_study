while문
   while(조건식){
      반복할문장;
   }
   while문 바깥 영역;

   while을 만나면 조건식을 먼저 검사한다.
   조건식이 참이면 while문 내부 영역을 실행한다.
   while문 닫는 중괄호를 만나면 다시 조건식으로 올라가서 검사한다. (반복)
   조건식이 거짓이면 while문 중괄호를 탈출한다.

for vs while
   for문   --> 반복 횟수를 알 때 사용하면 편리하다.
   while문   --> 반복 횟수를 모를 때 사용하면 편리하다. (무한반복)

do ~ while문
   do {
      반복할 문장;
   } while(조건식);

   최초 한 번은 do 영역의 문장을 실행하고
   그 뒤에 조건식을 확인하여 참이면 해당 영역을 반복, 거짓이면 탈출.

==================================================
랜덤하게 나오는 숫자를 우리가 맞추는 게임
   1. 난이도 설정
      상 : 1 부터 20까지 숫자 중 랜덤으로 숫자 맞추기
          점수 + 100점

      중 : 1 부터 10까지 숫자 중 랜덤으로 숫자 맞추기
          점수 + 50점

      하 : 1 부터 5까지 숫자 중 랜덤으로 숫자 맞추기
          점수 + 25점

   2. 게임하기
      난이도를 설정하지 않았다면, 난이도 설정해라고 출력하고 다시 되돌리기.

      숫자를 맞춰 보세요 >>
      정답! 몇 점 올라갑니다! / 땡! 정답은 뭐였습니다.

   3. 내 점수 보기
      당신의 점수는 몇 점 입니다.

   4. 나가기


#include<time.h>
time(NULL)
 --> 70년 1월 1일 0시 0분 0초 이후로 지금까지 경과한 시간을 초단위로 가져온다.
-->  ex> printf("%d\n", time(NULL));

#include<stdlib.h>
1. rand() 
   --> 0~32767 사이의 난수를 가져온다.
2. rand() % 20 +1 
   --> 1 ~ 20 사이의 난수 
   --> ex> printf("난수 : %d\n" , rand()%20 + 1);









