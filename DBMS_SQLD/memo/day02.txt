day02. SELECT, DISTINCT, Alias, ORDER BY, 자료형, 연산자

SQL문의 종류
	1. DDL : 데이터 정의 언어
	2. DML : 데이터 조작 언어
	3. DCL : 데이터 제어 언어(권한)
	4. TCL : 트랜잭션 제어 언어

SELECT
	테이블에서 데이터를 조회할때 사용하는 명령어
	지정한 테이블에서 행들의 지정한 컬럼(열)의 정보를 조회한다
	*(애스터리스크) : 모든 컬럼을 조회한다

	SELECT 컬럼명1, 컬럼명2...
	FROM 테이블명;

DISTINCT
	지정한 컬럼의 값이 중복되는 행들을 제외하고 조회한다

	SELECT DISTINCT 컬럼명
	FROM 테이블명;

Alias(별칭)
	
	테이블이나 컬럼명에 별칭(별명)을 붙인다
	실제 테이블이나 컬럼의 이름이 변경되는 것이 아닐나,
	조회 결과와 쿼리문에서 별칭을 사용하게 된다

	* 별칭에 한글이나 특수문자, 공백을 사용할때는 "" (큰 따옴표)
	안에다가 작성한다

	SELECT 컬럼명 AS "별칭"...
	FROM 테이블명;

ORDER BY 
	
	지정한 컬럼의 값을 기준으로 행들을 정렬하여 조회한다
	기본 정렬은 오름차순이며 정렬 순서를 생략할 경우 자동으로
	부여된다
	내림차순으로 정렬하고 싶을때는 DESC 키워드를 사용한다

	1. 오름차순(ascending) : 작은것부터 큰것으로 정렬
		숫자정렬시 : 작은 숫자부터 큰 숫자 순서
		문자정렬시 : 알파벳 순서, 대문자 < 소문자
		날짜정렬시 : 현재를 기준으로 오래된 날짜부터

	2. 내림차순(descending) : 큰것부터 작은것으로 정렬
		숫자정렬시 : 큰 숫자부터 작은 숫자 순서
		문자정렬시 : 알파벳 순서, 대문자 < 소문자
		날짜정렬시 : 현재를 기준으로 최신날짜 부터

	SELECT 컬럼명1, 컬럼명2...
	FROM 테이블명
	ORDER BY 컬럼명 [ASC or DESC];

자료형
	1. 문자데이터
	2. 숫자데이터
	3. 날짜데이터
	4. 대용량데이터

문자 데이터
	'' (작은 따옴표) 안에서 작성한다
	'1' -> 문자 1
	1 -> 숫자 1

	1. CHAR(용량) : 고정 길이의 문자를 표현한다
		정해진 용량보다 작은 문자가 저장될 경우,
		남은 공간을 공백으로 채운다
		ex) CHAR(5) -> 'A' -> A^^^^ 빈자리를 공백으로 채운다
		문자의 수가 변하지 않는 고정 문자의 값에 사용(주민번호 등..)

	2. VARCHAR2(용량 : 가변 길이의 문자를 표현한다
		문자의 수만큼 공간이 배정되어 남은 공간을 공백으로
		채우지 않는다 
		문자의 수가 변화가 있는 값에 사용한다(아이디, 비밀번호 등..)		

숫자 데이터
	
	NUMBER(p) : 정수를 표현한다
	NUMBER(p, s) : 실수를 표현한다

	p : precision -> 정밀도(최대 유효숫자 자리수)
	s : scale -> 소수점 기준 자리수(생략시 0)

날짜 데이터
	
	1. DATE : 기본 날짜 자료형(년, 월, 일, 시, 분, 초)
		형식(format)에 맞추어 값을 테이블에 저장하여 사용한다
		기본형식 : YYYY(년), MM(월), DD(일), HH24(24시간), 
		HH(12시간), MI(분), SS(초)

	2. TIMESTAMP : 소수 초까지 정확한 날짜와 시간값을 저장하는 경우

대용량 데이터

	1. BLOB(Binary Large Object) : 바이너리 대형 객체
		-> 이미지, 오디오, 비디오
	2. CLOB(Character Large Object) : 문자 대형 객체
		-> 큰 문자열이나 문서
		* 최대 4GB 문자열을 저장할수 있다

연산자
	1. 단항 연산자
	2. 산술 연산자
	3. 연결 연산자
	4. 비교 연산자(관계 연산자)
	5. 논리 연산자
	6. SQL 연산자


단항 연산자
	양수(+), 음수(-)

산술 연산자
	숫자나 날짜에 산술 연산을 한다

	더하기(+), 빼기(-), 나누기(/), 곱하기(*)

	* 날짜에 산술 연산이 진행되면 일자로 계산된다
	* 나눗셈의 제수(어떤수를 나누는 수)가 0이면 에러가 발생한다























	












